_____________________________________Внешний ключ. Каскадирование_____________________________________

Primary key(PK)                                      Primary key(PK)             Foreign key(FK)
    \           Person                                        \           Order  /
------------------------------------                      ------------------------------------
|  user_id   |   name    |   age   |                      |  order_id  |  user_id  |item_name|
|------------|-----------|---------|                      |------------|-----------|---------|
|     1      |    Tom    |    35   |                      |     1      |     1     |  Book   |
|     2      |    Bob    |    52   |                      |     2      |     1     | Airpods |
|     3      |    Katy   |    14   |                      |     3      |     2     | Iphone  |
------------------------------------                      |     4      |     3     | Kindle  |
                                                          ------------------------------------
При удалении человека с user_id=3 (или любого другого)

DELETE FROM Person WHERE user_id=3
Получим ошибку, так как внешние ключи ссылаются на теперь уже не существующего человека
Эту проблему можно решить с помощью Каскадирования.

__________________________________Каскадирование (англ. Cascade)____________________________________

 user_id int REFERENCES Person (user_id) ON DELETE ???

1) CASCADE - удаляет строки в зависимой таблице при удалении связанных строк в главной таблице
(удаление человека ---> удаляются все связанные с ним заказы)
2) SET NULL - Выставляет значение внешнего ключа равным NULL при удалении связанных строк в главной
таблице (удалили человека ---> теперь заказы ничейные)
3) RESTRIST - Поведение по умолчанию. Выдает ошибку при попытке удалить человека

_____________________________________Практика.RESTRIST_______________________________________________

CREATE table Person(
    user_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
    name varchar (100) NOT NULL ,
    age int
);
CREATE table "Order"(    <--- Название в "" так как в PostgreSQL, есть такое ключевое слово
    order_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
    user_id int REFERENCES Person (user_id),           <---
    item_name varchar (100)
);
INSERT INTO Person(NAME, AGE) VALUES ('Tom',30);

INSERT INTO "Order"(user_id, item_name) VALUES (1,'Iphone');

DELETE FROM Person where user_id=1;   <--- Поскольку используется REFERENCES используется
каскадирование по умолчанию RESTRIST. Человека удалить не получиться, отобразиться ошибка, что
на этого человека ссылаются данные

[23503] ERROR: update or delete on table "person" violates foreign key constraint
"Order_user_id_fkey" on table "Order" Подробности: Key (user_id)=(1) is still referenced from
table "Order".

__________________________________Практика.CASCADE_______________________________________________

CREATE table Person(
    user_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
    name varchar (100) NOT NULL ,
    age int
);
CREATE table "Order"(
    order_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
    user_id int REFERENCES Person (user_id) ON DELETE CASCADE,      <---
    item_name varchar (100)
);

INSERT INTO Person(NAME, AGE) VALUES ('Tom',30);

INSERT INTO "Order"(user_id, item_name) VALUES (1,'Iphone');

DELETE FROM Person WHERE user_id=1;

select * from Person;

select *from "Order";

Теперь и "Order" и Person станут пустыми, так как используется CASCADE

__________________________________Практика.SET NULL________________________________________________

CREATE table Person(
    user_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
    name varchar (100) NOT NULL ,
    age int
);
CREATE table "Order"(
    order_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
    user_id int REFERENCES Person (user_id) ON DELETE SET NULL ,   <---
    item_name varchar (100)
);

INSERT INTO Person(NAME, AGE) VALUES ('Tom',30);

INSERT INTO "Order"(user_id, item_name) VALUES (1,'Iphone');

DELETE FROM Person WHERE user_id=1;

select * from Person;

select *from "Order";

Теперь таблица Person будет пустой, а таблица "Order" будет содержать значение для user_id = null,
так как используется SET NULL