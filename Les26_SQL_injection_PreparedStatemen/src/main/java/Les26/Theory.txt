_________________________________Составление SQL запроса вручную_____________________________________
1) Неудобно
2) Легко допустить ошибку
3) Угроза SQL инъекции

________________________________________SQL инъекция_________________________________________________
Один из самых распространенных способов взлома сайтов и программ, работающих с базами данных

String SQL = "INSERT INTO Person Values(" +1 + ",'" +person.getName() + "'," +
                            person.getAge() + ",'" + person.getEmail() + "')";

Так как строки из HTML формы напрямую конкатенируются в SQL запросе, злоумышленник может подобрать
такую строку, которая нанесет вред

Если в качестве email'а в форме мы введем строку: test@mail.ru'); DROP TABLE Person; --

INSERT INTO Person VALUES(1, 'test', 15, 'test@mail.ru'); DROP TABLE Person; --');

SQL инъекции бывают разные, в основном их принцип, что передается несколько команд вместо или под
 видом одной команды, таким образом можно вытащить всех пользователей их базы данных и прочее

 ______________________________________PreparedStatement_____________________________________________
 То, что должно использоваться в JDBC API для всех запросов, где содержаться данные, полученные от
 пользователя

 PreparedStatement preparedStatement =
         connection.prepareStatement(sql: "INSERT INTO Person VALUES(1, ?, ?, ?)");
 preparedStatement.setString(parametrindex: 1, person.getName());
 preparedStatement.setInt(parametrindex: 2, person.getAge());
 preparedStatement.setString(parametrindex: 3, person.getEmail());

 preparedStatement.executeUpdate();

 SQL запрос компилируется один раз и не может быть изменен. Данные от пользователя могут вставлены
 лишь в указанные места запроса и не могут изменить сам SQL запрос. При использовании
 PreparedStatement не получится выйти за пределы строки (как в примере и email) перечисление
 SQL команд воспримется как целая строка

 _____________________________PreparedStatement преимущества_________________________________________
 1) Удобнее использовать, чем Statement (не надо вручную заниматься конкатенацией)
 2) Предотвращает SQL инъекции
 3) Быстрее, чем Statement. Особенно если запросов много.

 ___________________PreparedStatement Скорость в сравнении со Statement______________________________
 1) PreparedStatement - SQL запрос компилируется только 1 раз
 2) Statement - SQL запрос компилируется каждый раз
 3) PreparedStatement - может еще кэшироваться на самой БД