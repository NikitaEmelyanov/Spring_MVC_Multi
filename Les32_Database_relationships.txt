____________________________________Реляционная БД. Этимология________________________________________
Relational Database (Англ. Relation - отношение, связь)
Между таблицами в реляционных БД есть отношения, связи

___________________________________Первичный ключ (Primary key)_______________________________________

Primary key(PK)
    \           Person
------------------------------------      Первичный ключ (Primary key) - Колонка в таблице, которая
|  user_id   |   name    |   age   |      уникально идентифицирует строку (другими словами -
|------------|-----------|---------|      идентификатор строки в таблице)
|     1      |    Tom    |    35   |
|     2      |    Bob    |    52   |
|     3      |    Katy   |    14   |
------------------------------------
___________________________________Внешний ключ (Foreign key)_________________________________________

Primary key(PK)                                      Primary key(PK)             Foreign key(FK)
    \           Person                                        \           Order  /
------------------------------------                      ------------------------------------
|  user_id   |   name    |   age   |                      |  order_id  |  user_id  |item_name|
|------------|-----------|---------|                      |------------|-----------|---------|
|     1      |    Tom    |    35   |                      |     1      |     1     |  Book   |
|     2      |    Bob    |    52   |                      |     2      |     1     | Airpods |
|     3      |    Katy   |    14   |                      |     3      |     2     | Iphone  |
------------------------------------                      |     4      |     3     | Kindle  |
       |                                                  ------------------------------------
       |                                   Связь                             |
       -----------------------------------------------------------------------

Внешний ключ (Foreign key) - это колонка, которая позволяет установить связь между таблицами.
Внешний ключ в одной таблице - это первичный ключ в другой таблице

              Person                                                     Order
------------------------------------                      ------------------------------------
|  user_id   |   name    |   age   |                      |  order_id  |  user_id  |item_name|
|------------|-----------|---------|                      |------------|-----------|---------|
|     1      |    Tom    |    35   |                      |     1      |     1     |  Book   |
|     2      |    Bob    |    52   |                      |     2      |     1     | Airpods |
|     3      |    Katy   |    14   |                      |     3      |     2     | Iphone  |
------------------------------------                      |     4      |     3     | Kindle  |
       |                                                  ------------------------------------
       |                                   Связь                             |
       -----------------------------------------------------------------------
                                                     |
                                                     |
                                                     |    Address
                                  -----------------------------------------------------------
                                  |address_id |  user_id   |  Country  |   City  | zip_code |
       Может быть больше          |-----------|------------|-----------|---------|----------|
          одной связи             |      1    |     1      |  Russia   |  Kazan  |  420021  |
                                  |      2    |     2      |  Ukraine  | Kharkov |  61105   |
                                  |      3    |     3      |  Belarus  |  Minsk  |  220004  |
                                  -----------------------------------------------------------
___________________________Избыточность данных (Data Redundancy)_____________________________________

                                    Нормализованные таблицы
              Person               /                       \              Order
------------------------------------                      ------------------------------------
|  user_id   |   name    |   age   |                      |  order_id  |  user_id  |item_name|
|------------|-----------|---------|                      |------------|-----------|---------|
|     1      |    Tom    |    35   |                      |     1      |     1     |  Book   |
|     2      |    Bob    |    52   |                      |     2      |     1     | Airpods |
|     3      |    Katy   |    14   |                      |     3      |     2     | Iphone  |
------------------------------------                      |     4      |     3     | Kindle  |
                                     \                    ------------------------------------
                                      \                  /
                                       \                /
                                        \              /
                                    Денормализованная таблица
                                             Person
                        ------------------------------------------------
                        |  user_id  |    name    |    age    |item_name|
                        |-----------|------------|-----------|---------|
Избыточность данных---> |      1    |     Tom    |     35    |  Book   |
      (Redundancy) ---> |      1    |     Tom    |     35    | Airpods |
                        |      2    |     Bob    |     52    | Iphone  |
                        |      3    |    Katy    |     14    | Kindle  |
                        ------------------------------------------------
Если не использовать связи появиться Избыточность данных (Data Redundancy). То есть при объединении
таблиц будет дублироваться информация о человеке и каждый раз занимать новую строку в таблице,
если бы этот Tom купил 1000 товаров пришлось бы внести 1000 раз его данные с разницей в столбце
покупки. По этому простое объединение таблиц без использования связей не является целесообразным.
Таблицы в которых нет лишних данных являются нормализованными, а где присутствуют лишние данные
являются денормализованными. Когда одна денормализованная таблица разбивается на нормализованные этот
 процесс называется нормализацией

 _______________________Отношения, которые могут быть в реляционной БД_______________________________
 1) Один ко Многим (One to Many)
 2) Один к одному (One to One)
 3) Многие ко многим (Many to Many)